# _     _            _        _          _____
#| |__ | | __ _  ___| | _____| | ___   _|___ /
#| '_ \| |/ _` |/ __| |/ / __| |/ / | | | |_ \
#| |_) | | (_| | (__|   <\__ \   <| |_| |___) |
#|_.__/|_|\__,_|\___|_|\_\___/_|\_\\__, |____/
#                                  |___/

#Maintainer: blacksky3 <blacksky3@tuta.io> <https://github.com/blacksky3>
#Credits: Giancarlo Razzolini <grazzolini@archlinux.org>
#Credits: Frederik Schwan <freswa at archlinux dot org>
#Credits: Bart≈Çomiej Piotrowski <bpiotrowski@archlinux.org>
#Credits: Allan McRae <allan@archlinux.org>
#Credits: Daniel Kozak <kozzi11@gmail.com>

# toolchain build order: linux-api-headers->glibc->binutils->gcc->glibc->binutils->gcc
# NOTE: libtool requires rebuilt with each new gcc version

pkgname=(gcc-git gcc-libs-git gcc-fortran-git lib32-gcc-libs-git libgccjit-git)
pkgver=12.0.1
_islver=0.24
pkgrel=4
pkgdesc='The GNU Compiler Collection'
arch=(x86_64)
license=(GPL LGPL FDL custom)
url='https://gcc.gnu.org'
makedepends=(binutils doxygen git lib32-glibc lib32-gcc-libs libisl libmpc
             libxcrypt python zstd)
checkdepends=(dejagnu expect inetutils python-pytest tcl)
options=(!emptydirs !lto !debug)
_libdir=usr/lib/gcc/$CHOST/12.0.1
source=(git+https://github.com/gcc-mirror/gcc.git
        c89
        c99
        fix-testsuite-default-pie.diff)

sha256sums=(SKIP
            de48736f6e4153f03d0a5d38ceb6c6fdb7f054e8f47ddd6af0a3dbf14f27b931
            2513c6d9984dd0a2058557bf00f06d8d5181734e41dcfe07be7ed86f2959622a
            3f2fc47ec6c67ff080f69e0ac89e71f9374e50293b9f99a2509477c3bd4787d1)

pkgver(){
  cd ${srcdir}/gcc
  echo "$(cat gcc/BASE-VER).r$(git rev-list --count HEAD).g$(git rev-parse --short HEAD)"
}

prepare(){
  cd ${srcdir}/gcc

  # Do not run fixincludes
  sed -i 's@\./fixinc\.sh@-c true@' gcc/Makefile.in

  # Arch Linux installs x86_64 libraries /lib
  sed -i '/m64=/s/lib64/lib/' gcc/config/i386/t-linux64

  # TODO - submit upstream once development reopens
  patch -p1 -i "${srcdir}"/fix-testsuite-default-pie.diff

  mkdir -p "$srcdir/gcc-build"
  mkdir -p "$srcdir/libgccjit-build"
}

build() {
  local _confflags="--prefix=/usr \
      --libdir=/usr/lib \
      --libexecdir=/usr/lib \
      --mandir=/usr/share/man \
      --infodir=/usr/share/info \
      --with-bugurl=https://bugs.archlinux.org/ \
      --with-linker-hash-style=gnu \
      --with-system-zlib \
      --enable-__cxa_atexit \
      --enable-cet=auto \
      --enable-checking=release \
      --enable-clocale=gnu \
      --enable-default-pie \
      --enable-default-ssp \
      --enable-gnu-indirect-function \
      --enable-gnu-unique-object \
      --enable-linker-build-id \
      --enable-lto \
      --enable-multilib \
      --enable-plugin \
      --enable-shared \
      --enable-threads=posix \
      --disable-libssp \
      --disable-libstdcxx-pch \
      --disable-werror \
      --with-build-config=bootstrap-lto \
      --enable-link-serialization=1 \
      gdc_include_dir=/usr/include/dlang/gdc"

  cd ${srcdir}/gcc-build

  # Credits @allanmcrae
  # https://github.com/allanmcrae/toolchain/blob/f18604d70c5933c31b51a320978711e4e6791cf1/gcc/PKGBUILD
  # TODO: properly deal with the build issues resulting from this
  CFLAGS=${CFLAGS/-Werror=format-security/}
  CXXFLAGS=${CXXFLAGS/-Werror=format-security/}

  # TODO: check if we can only remove these when running testsuite
  CFLAGS=${CFLAGS/-fexceptions/}		# +7 failures in gcc, +14 in libitm
  CFLAGS=${CFLAGS/-Wp,-D_FORTIFY_SOURCE=2/}	# +29 failures in libstdc++

  CXXFLAGS="${CFLAGS} -Wp,-D_GLIBCXX_ASSERTIONS"

  "$srcdir/gcc/configure" \
    --enable-languages=c,c++,fortran,lto \
    --enable-bootstrap \
    $_confflags

  # see https://bugs.archlinux.org/task/71777 for rationale re *FLAGS handling
  make -j$(nproc) -O STAGE1_CFLAGS="-O2" \
                     BOOT_CFLAGS="$CFLAGS" \
                     BOOT_LDFLAGS="$LDFLAGS" \
                     LDFLAGS_FOR_TARGET="$LDFLAGS" \
                     profiledbootstrap

  # make documentation
  make -j$(nproc) -O -C $CHOST/libstdc++-v3/doc doc-man-doxygen

  # Build libgccjit separately, to avoid building all compilers with --enable-host-shared
  # which brings a performance penalty
  cd ${srcdir}/libgccjit-build

  "$srcdir/gcc/configure" \
    --enable-languages=jit \
    --disable-bootstrap \
    --enable-host-shared \
    $_confflags

  # see https://bugs.archlinux.org/task/71777 for rationale re *FLAGS handling
  make -j$(nproc) -O STAGE1_CFLAGS="-O2" \
                     BOOT_CFLAGS="$CFLAGS" \
                     BOOT_LDFLAGS="$LDFLAGS" \
                     LDFLAGS_FOR_TARGET="$LDFLAGS" \
                     all-gcc

  cp -a gcc/libgccjit.so* ../gcc-build/gcc/
}

check(){
  cd ${srcdir}/gcc-build

  # do not abort on error as some are "expected"
  make -j$(nproc) -O -k check || true
  "$srcdir/gcc/contrib/test_summary"
}

package_gcc-libs-git(){
  pkgdesc='Runtime libraries shipped by GCC (git version)'
  depends=('glibc>=2.27')
  options=(!emptydirs !strip)
  provides=(libgfortran.so libubsan.so libasan.so libtsan.so liblsan.so
            gcc-libs gcc-libs-multilib "gcc-libs=${pkgver}-${pkgrel}" "gcc-libs-multilib=${pkgver}-${pkgrel}"
            gcc-libs-git "gcc-libs-git=${pkgver}-${pkgrel}" "gcc-libs-multilib=${pkgver}-${pkgrel}")
  replaces=(libgphobos gcc-libs-multilib)
  conflicts=(gcc-libs)

  cd ${srcdir}/gcc-build
  make -j$(nproc) -C $CHOST/libgcc DESTDIR="$pkgdir" install-shared
  rm -f "$pkgdir/$_libdir/libgcc_eh.a"

  for lib in libatomic \
             libgfortran \
             libgomp \
             libitm \
             libquadmath \
             libsanitizer/{a,l,ub,t}san \
             libstdc++-v3/src \
             libvtv; do
    make -j$(nproc) -C $CHOST/$lib DESTDIR="$pkgdir" install-toolexeclibLTLIBRARIES
  done

  make -j$(nproc) -C $CHOST/libstdc++-v3/po DESTDIR="$pkgdir" install

  for lib in libgomp \
             libitm \
             libquadmath; do
    make -C $CHOST/$lib DESTDIR="$pkgdir" install-info
  done

  # remove files provided by lib32-gcc-libs
  rm -rf "$pkgdir"/usr/lib32/

  # Install Runtime Library Exception
  install -Dm644 "$srcdir/gcc/COPYING.RUNTIME" \
    "$pkgdir/usr/share/licenses/gcc-libs/RUNTIME.LIBRARY.EXCEPTION"
}

package_gcc-git(){
  pkgdesc='The GNU Compiler Collection - C and C++ frontends (git version)'
  depends=("gcc-libs=$pkgver-$pkgrel" 'binutils>=2.28' libmpc zstd libisl.so)
  groups=(base-devel)
  optdepends=('lib32-gcc-libs: for generating code for 32-bit ABI')
  provides=(gcc gcc-multilib "gcc=${pkgver}-${pkgrel}" "gcc-multilib=${pkgver}-${pkgrel}"
            gcc-git gcc-multilib-git "gcc-git=${pkgver}-${pkgrel}" "gcc-mutilib-git=${pkgver}-${pkgrel}")
  replaces=(gcc-multilib)
  conflicts=(gcc)
  options=(!emptydirs staticlibs !debug)

  cd ${srcdir}/gcc-build

  make -j$(nproc) -C gcc DESTDIR="$pkgdir" install-driver install-cpp install-gcc-ar \
    c++.install-common install-headers install-plugin install-lto-wrapper

  install -m755 -t "$pkgdir/usr/bin/" gcc/gcov{,-tool}
  install -m755 -t "$pkgdir/${_libdir}/" gcc/{cc1,cc1plus,collect2,lto1}

  make -j$(nproc) -C $CHOST/libgcc DESTDIR="$pkgdir" install
  make -j$(nproc) -C $CHOST/32/libgcc DESTDIR="$pkgdir" install
  rm -f "$pkgdir"/usr/lib{,32}/libgcc_s.so*

  make -j$(nproc) -C $CHOST/libstdc++-v3/src DESTDIR="$pkgdir" install
  make -j$(nproc) -C $CHOST/libstdc++-v3/include DESTDIR="$pkgdir" install
  make -j$(nproc) -C $CHOST/libstdc++-v3/libsupc++ DESTDIR="$pkgdir" install
  make -j$(nproc) -C $CHOST/libstdc++-v3/python DESTDIR="$pkgdir" install
  make -j$(nproc) -C $CHOST/32/libstdc++-v3/src DESTDIR="$pkgdir" install
  make -j$(nproc) -C $CHOST/32/libstdc++-v3/include DESTDIR="$pkgdir" install
  make -j$(nproc) -C $CHOST/32/libstdc++-v3/libsupc++ DESTDIR="$pkgdir" install

  make -j$(nproc) DESTDIR="$pkgdir" install-libcc1
  install -d "$pkgdir/usr/share/gdb/auto-load/usr/lib"
  mv "$pkgdir"/usr/lib/libstdc++.so.6.*-gdb.py \
    "$pkgdir/usr/share/gdb/auto-load/usr/lib/"
  rm "$pkgdir"/usr/lib{,32}/libstdc++.so*

  make -j$(nproc) DESTDIR="$pkgdir" install-fixincludes
  make -j$(nproc) -C gcc DESTDIR="$pkgdir" install-mkheaders

  make -j$(nproc) -C lto-plugin DESTDIR="$pkgdir" install
  install -dm755 "$pkgdir"/usr/lib/bfd-plugins/
  ln -s /${_libdir}/liblto_plugin.so \
    "$pkgdir/usr/lib/bfd-plugins/"

  make -j$(nproc) -C $CHOST/libgomp DESTDIR="$pkgdir" install-nodist_{libsubinclude,toolexeclib}HEADERS
  make -j$(nproc) -C $CHOST/libitm DESTDIR="$pkgdir" install-nodist_toolexeclibHEADERS
  make -j$(nproc) -C $CHOST/libquadmath DESTDIR="$pkgdir" install-nodist_libsubincludeHEADERS
  make -j$(nproc) -C $CHOST/libsanitizer DESTDIR="$pkgdir" install-nodist_{saninclude,toolexeclib}HEADERS
  make -j$(nproc) -C $CHOST/libsanitizer/asan DESTDIR="$pkgdir" install-nodist_toolexeclibHEADERS
  make -j$(nproc) -C $CHOST/libsanitizer/tsan DESTDIR="$pkgdir" install-nodist_toolexeclibHEADERS
  make -j$(nproc) -C $CHOST/libsanitizer/lsan DESTDIR="$pkgdir" install-nodist_toolexeclibHEADERS
  make -j$(nproc) -C $CHOST/32/libgomp DESTDIR="$pkgdir" install-nodist_toolexeclibHEADERS
  make -j$(nproc) -C $CHOST/32/libitm DESTDIR="$pkgdir" install-nodist_toolexeclibHEADERS
  make -j$(nproc) -C $CHOST/32/libsanitizer DESTDIR="$pkgdir" install-nodist_{saninclude,toolexeclib}HEADERS
  make -j$(nproc) -C $CHOST/32/libsanitizer/asan DESTDIR="$pkgdir" install-nodist_toolexeclibHEADERS

  # don't fail if can't remove the files (when certain languages were disabled)
  make -j$(nproc) -C gcc DESTDIR="$pkgdir" install-man install-info
  rm "$pkgdir"/usr/share/man/man1/{gccgo,gfortran,gdc}.1 ||:
  rm "$pkgdir"/usr/share/info/{gccgo,gfortran,gnat-style,gnat_rm,gnat_ugn,gdc}.info ||:

  make -j$(nproc) -C libcpp DESTDIR="$pkgdir" install
  make -j$(nproc) -C gcc DESTDIR="$pkgdir" install-po

  # many packages expect this symlink
  ln -s gcc "$pkgdir"/usr/bin/cc

  # POSIX conformance launcher scripts for c89 and c99
  install -Dm755 "$srcdir/c89" "$pkgdir/usr/bin/c89"
  install -Dm755 "$srcdir/c99" "$pkgdir/usr/bin/c99"

  # install the libstdc++ man pages
  make -j$(nproc) -C $CHOST/libstdc++-v3/doc DESTDIR="$pkgdir" doc-install-man

  # remove files provided by lib32-gcc-libs
  rm -f "$pkgdir"/usr/lib32/lib{stdc++,gcc_s}.so

  # byte-compile python libraries
  python -m compileall "$pkgdir/usr/share/gcc-${pkgver%%+*}/"
  python -O -m compileall "$pkgdir/usr/share/gcc-${pkgver%%+*}/"

  # Install Runtime Library Exception
  install -d "$pkgdir/usr/share/licenses/$pkgname/"
  ln -s /usr/share/licenses/gcc-libs/RUNTIME.LIBRARY.EXCEPTION \
    "$pkgdir/usr/share/licenses/$pkgname/"
}

package_gcc-fortran-git(){
  pkgdesc='Fortran front-end for GCC (git version)'
  depends=("gcc=$pkgver-$pkgrel" libisl.so)
  provides=(gcc-fortran gcc-fortran-multilib "gcc-fortran=${pkgver}-${pkgrel}" "gcc-fortran-mutilib=${pkgver}-${pkgrel}"
            gcc-fortran-git gcc-fortran-multilib-git "gcc-fortran-git=${pkgver}-${pkgrel}" "gcc-fortran-mutilib-git=${pkgver}-${pkgrel}")
  replaces=(gcc-fortran-multilib)
  conflicts=(gcc-fortran)

  cd ${srcdir}/gcc-build
  make -j$(nproc) -C $CHOST/libgfortran DESTDIR="$pkgdir" install-cafexeclibLTLIBRARIES \
    install-{toolexeclibDATA,nodist_fincludeHEADERS,gfor_cHEADERS}
  make -j$(nproc) -C $CHOST/32/libgfortran DESTDIR="$pkgdir" install-cafexeclibLTLIBRARIES \
    install-{toolexeclibDATA,nodist_fincludeHEADERS,gfor_cHEADERS}
  make -j$(nproc) -C $CHOST/libgomp DESTDIR="$pkgdir" install-nodist_fincludeHEADERS
  make -j$(nproc) -C gcc DESTDIR="$pkgdir" fortran.install-{common,man,info}
  install -Dm755 gcc/f951 "$pkgdir/${_libdir}/f951"

  ln -s gfortran "$pkgdir/usr/bin/f95"

  # Install Runtime Library Exception
  install -d "$pkgdir/usr/share/licenses/$pkgname/"
  ln -s /usr/share/licenses/gcc-libs/RUNTIME.LIBRARY.EXCEPTION \
    "$pkgdir/usr/share/licenses/$pkgname/"
}

package_lib32-gcc-libs-git(){
  pkgdesc='32-bit runtime libraries shipped by GCC (git version)'
  depends=('lib32-glibc>=2.27')
  provides=(libgfortran.so libubsan.so libasan.so lib32-gcc-libs "lib32-gcc-libs=${pkgver}-${pkgrel}"
            lib32-gcc-libs-git "lib32-gcc-libs-git=${pkgver}-${pkgrel}")
  conflicts=(lib32-gcc-libs)
  groups=(multilib-devel)
  options=(!emptydirs !strip)

  cd ${srcdir}/gcc-build

  make -j$(nproc) -C $CHOST/32/libgcc DESTDIR="$pkgdir" install-shared
  rm -f "$pkgdir/$_libdir/32/libgcc_eh.a"

  for lib in libatomic \
             libgfortran \
             libgomp \
             libitm \
             libquadmath \
             libsanitizer/{a,l,ub}san \
             libstdc++-v3/src \
             libvtv; do
    make -j$(nproc) -C $CHOST/32/$lib DESTDIR="$pkgdir" install-toolexeclibLTLIBRARIES
  done

  # remove files provided by gcc-libs
  rm -rf "$pkgdir"/usr/lib

  # Install Runtime Library Exception
  install -Dm644 "$srcdir/gcc/COPYING.RUNTIME" \
    "$pkgdir/usr/share/licenses/lib32-gcc-libs/RUNTIME.LIBRARY.EXCEPTION"
}

package_libgccjit-git(){
  pkgdesc='Just-In-Time Compilation with GCC backend (git version)'
  depends=("gcc=$pkgver-$pkgrel" libisl.so)
  provides=(libgccjit "libgccjit=${pkgver}-${pkgrel}" libgccjit-git "libgccjit-git=${pkgver}-${pkgrel}")

  cd ${srcdir}/gcc-build
  make -j$(nproc) -C gcc DESTDIR="$pkgdir" jit.install-common jit.install-info

  # Install Runtime Library Exception
  install -d "$pkgdir/usr/share/licenses/$pkgname/"
  ln -s /usr/share/licenses/gcc-libs/RUNTIME.LIBRARY.EXCEPTION \
    "$pkgdir/usr/share/licenses/$pkgname/"
}
